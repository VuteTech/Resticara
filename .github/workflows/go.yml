name: Go Build and Release

on:
  push:
    branches:
      - master
      - ci_packages
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.20'

    - name: Build
      env:
        CGO_ENABLED: 0
      run: go build -v -o resticara

    - name: Run Tests
      run: go test -v ./...

    - name: Zip artifacts
      run: zip -r resticara-${{ github.ref_name }}.zip resticara config.ini templates/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: resticara-artifacts
        path: resticara-${{ github.ref_name }}.zip

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: resticara-artifacts

    - name: Install dpkg-dev
      run: sudo apt-get -y update && sudo apt-get -y install dpkg-dev unzip

    - name: Unzip artifacts
      run: unzip resticara-${{ github.ref_name }}.zip

    - name: Prepare Debian Package Structure
      run: |
        mkdir -p debian/DEBIAN
        mkdir -p debian/usr/local/bin
        mkdir -p debian/etc/resticara
        cp resticara debian/usr/local/bin/
        cp config.ini debian/etc/resticara/
        cp templates/* debian/etc/resticara/
        echo "Package: resticara" > debian/DEBIAN/control
        echo "Version: ${{ github.ref_name }}" >> debian/DEBIAN/control
        echo "Architecture: amd64" >> debian/DEBIAN/control
        echo "Maintainer: Blagovest Petrov <blago.petrov@vute.tech>" >> debian/DEBIAN/control
        echo "Description: Wrapper of Restic for simplified configuration and deployment." >> debian/DEBIAN/control

    - name: Build DEB package
      run: dpkg-deb --build debian resticara-${{ github.ref_name }}.deb

    - name: Upload packaged artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packaged-artifacts
        path: resticara-${{ github.ref_name }}.deb

  release:
    needs: package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: packaged-artifacts

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Description of the release
        draft: false
        prerelease: false

    # - name: Upload Release Assets
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./resticara-${{ github.ref_name }}.zip
    #     asset_name: resticara-${{ github.ref_name }}.zip
    #     asset_content_type: application/zip

    - name: Upload DEB Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./resticara-${{ github.ref_name }}.deb
        asset_name: resticara-${{ github.ref_name }}.deb
        asset_content_type: application/octet-stream

    # - name: Upload RPM Asset
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./resticara-${{ github.ref_name }}.rpm
    #     asset_name: resticara-${{ github.ref_name }}.rpm
    #     asset_content_type: application/octet-stream
