name: Go Build and Release

on:
  push:
    branches:
      - master
      - ci_packages
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      env:
        CGO_ENABLED: 0
      run: go build -v -o resticara

    - name: Run Tests
      run: go test -v ./...

    - name: Upload binary build artifact
      uses: actions/upload-artifact@v3
      with:
        name: resticara-artifacts
        path: resticara

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: resticara-artifacts

    - name: Install dpkg-dev
      run: sudo apt-get -y update && sudo apt-get -y install dpkg-dev rpm

    - name: Prepare Debian Package Structure
      run: |
        if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
          VERSION="${{ github.ref_name }}"
        else
          VERSION="0.1+${{ github.run_number }}"
        fi
        mkdir -p debian/DEBIAN
        mkdir -p debian/usr/local/bin
        mkdir -p debian/etc/resticara/templates
        cp resticara debian/usr/local/bin/resticara
        chmod +x debian/usr/local/bin/resticara
        cp config.ini-dist debian/etc/resticara/config.ini
        cp templates/* debian/etc/resticara/templates
        echo "Package: resticara" > debian/DEBIAN/control
        echo "Version: $VERSION" >> debian/DEBIAN/control
        echo "Architecture: amd64" >> debian/DEBIAN/control
        echo "Maintainer: Blagovest Petrov <blago.petrov@vute.tech>" >> debian/DEBIAN/control
        echo "Description: Wrapper of Restic for simplified configuration and deployment." >> debian/DEBIAN/control

    - name: Build DEB package
      run: dpkg-deb --build debian resticara-${{ github.ref_name }}.deb

    - name: Prepare RPM Package Structure
      run: |
        if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
          VERSION="${{ github.ref_name }}"
        else
          VERSION="0.1+${{ github.run_number }}"
        fi
        mkdir -p ~/rpmbuild/SOURCES ~/rpmbuild/SPECS
        cp resticara ~/rpmbuild/SOURCES/
        cp config.ini-dist ~/rpmbuild/SOURCES/config.ini-dist
        cp -r templates ~/rpmbuild/SOURCES/templates
        echo "Summary: Wrapper of Restic for simplified configuration and deployment." > ~/rpmbuild/SPECS/resticara.spec
        echo "Name: resticara" >> ~/rpmbuild/SPECS/resticara.spec
        echo "Version: $VERSION" >> ~/rpmbuild/SPECS/resticara.spec
        echo "Release: 1" >> ~/rpmbuild/SPECS/resticara.spec
        echo "License: GPLv3" >> ~/rpmbuild/SPECS/resticara.spec
        echo "" >> ~/rpmbuild/SPECS/resticara.spec
        echo "%description" >> ~/rpmbuild/SPECS/resticara.spec
        echo "Wrapper of Restic for simplified configuration and deployment." >> ~/rpmbuild/SPECS/resticara.spec
        echo "" >> ~/rpmbuild/SPECS/resticara.spec
        echo "%install" >> ~/rpmbuild/SPECS/resticara.spec
        echo "mkdir -p %{buildroot}/usr/bin" >> ~/rpmbuild/SPECS/resticara.spec
        echo "mkdir -p %{buildroot}/etc/resticara/templates" >> ~/rpmbuild/SPECS/resticara.spec
        echo "cp ~/rpmbuild/SOURCES/resticara %{buildroot}/usr/bin/resticara" >> ~/rpmbuild/SPECS/resticara.spec
        echo "chmod 0755 %{buildroot}/usr/bin/resticara" >> ~/rpmbuild/SPECS/resticara.spec
        echo "cp ~/rpmbuild/SOURCES/config.ini-dist %{buildroot}/etc/resticara/config.ini" >> ~/rpmbuild/SPECS/resticara.spec
        echo "cp -r ~/rpmbuild/SOURCES/templates/* %{buildroot}/etc/resticara/templates/" >> ~/rpmbuild/SPECS/resticara.spec
        echo "" >> ~/rpmbuild/SPECS/resticara.spec
        echo "%files" >> ~/rpmbuild/SPECS/resticara.spec
        echo "/usr/bin/resticara" >> ~/rpmbuild/SPECS/resticara.spec
        echo "/etc/resticara/config.ini" >> ~/rpmbuild/SPECS/resticara.spec
        echo "/etc/resticara/templates/*" >> ~/rpmbuild/SPECS/resticara.spec

    - name: Build RPM package
      run: rpmbuild -ba ~/rpmbuild/SPECS/resticara.spec

    - name: Build zip file
      run: |
        if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
          VERSION="${{ github.ref_name }}"
        else
          VERSION="0.1+${{ github.run_number }}"
        fi
        mkdir -p "resticara-$VERSION"
        cp config.ini-dist "resticara-$VERSION/config.ini"
        cp -r templates/ "resticara-$VERSION"
        zip -r "resticara-$VERSION.zip" "resticara-$VERSION"

    - name: Upload DEB package artifact
      uses: actions/upload-artifact@v3
      with:
        name: deb-package
        path: '*.deb'

    - name: Upload RPM package artifact
      uses: actions/upload-artifact@v3
      with:
        name: rpm-package
        path: ~/rpmbuild/RPMS/**/*.rpm

    - name: Upload ZIP archivea artifact
      uses: actions/upload-artifact@v3
      with:
        name: zip-archive
        path: '*.zip'

  release:
    needs: package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: packaged-artifacts

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Description of the release
        draft: false
        prerelease: false

    # - name: Upload Release Assets
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./resticara-${{ github.ref_name }}.zip
    #     asset_name: resticara-${{ github.ref_name }}.zip
    #     asset_content_type: application/zip

    - name: Upload DEB Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./resticara-${{ github.ref_name }}.deb
        asset_name: resticara-${{ github.ref_name }}.deb
        asset_content_type: application/octet-stream

    - name: Upload RPM Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./resticara-${{ github.ref_name }}.rpm
        asset_name: resticara-${{ github.ref_name }}.rpm
        asset_content_type: application/octet-stream
