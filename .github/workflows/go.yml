name: Go Build and Release

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build Binary
      run: go build -v -o resticara ./...

    - name: Run Tests
      run: go test -v ./...

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: resticara-artifacts
        path: |
          resticara
          config.ini
          templates/

  zip:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: resticara-artifacts

    - name: Zip Artifacts
      run: zip -r resticara.zip resticara config.ini templates/

    - name: Upload zipped artifacts
      uses: actions/upload-artifact@v2
      with:
        name: resticara-zip
        path: resticara.zip

  release:
    needs: zip
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download zip from artifacts
      uses: actions/download-artifact@v2
      with:
        name: resticara-zip

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Description of the release
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./resticara.zip
        asset_name: resticara.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
